name: maven-build
on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Build with Maven
        run: mvn -B clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      - id: version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"
      - name: Upload Jar
        uses: actions/upload-artifact@v4
        with:
          name: exe-jar
          path: "target/*-exe.jar"
      - name: Upload Splash
        uses: actions/upload-artifact@v4
        with:
          name: package-resources
          path: package-resources
  osx-x64:
    needs: build
    runs-on: macos-11
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Download Resources
        uses: actions/download-artifact@v4
        with:
          name: package-resources
      - name: Download Jar
        uses: actions/download-artifact@v4
        with:
          name: exe-jar
          path: jars
      - run: cp splash.png jars
      - name: Package jar as dmg installer
        run: >
          jpackage
          --icon cruise_pack.icns
          --vendor 'CIRES - University of Colorado' 
          --java-options '-splash:$APPDIR/splash.png'
          --name 'Cruise Pack'
          -i jars
          --main-class org.springframework.boot.loader.launch.JarLauncher
          --main-jar cruise-pack-${{ needs.build.outputs.version }}-exe.jar
          --about-url https://github.com/CI-CMG/JCruisePack
          --mac-package-identifier edu.colorado.cires.cruisepack.app.CruisePack
      - name: View artifacts
        run: ls -l
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-install-mac-x64.dmg
          path: "*.dmg"
  osx-arm64:
    needs: build
    runs-on: macos-14
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Download Resources
        uses: actions/download-artifact@v4
        with:
          name: package-resources
      - name: Download Jar
        uses: actions/download-artifact@v4
        with:
          name: exe-jar
          path: jars
      - run: cp splash.png jars
      - name: Package jar as dmg installer
        run: >
          jpackage
          --icon cruise_pack.icns
          --vendor 'CIRES - University of Colorado' 
          --java-options '-splash:$APPDIR/splash.png'
          --name 'Cruise Pack'
          -i jars
          --main-class org.springframework.boot.loader.launch.JarLauncher
          --main-jar cruise-pack-${{ needs.build.outputs.version }}-exe.jar
          --about-url https://github.com/CI-CMG/JCruisePack
          --mac-package-identifier edu.colorado.cires.cruisepack.app.CruisePack
      - name: View artifacts
        run: ls -l
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-install-mac-arm64.dmg
          path: "*.dmg"
  linux-x64:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Download Resources
        uses: actions/download-artifact@v4
        with:
          name: package-resources
      - name: Download Jar
        uses: actions/download-artifact@v4
        with:
          name: exe-jar
          path: jars
      - run: cp splash.png jars
      - name: Package jar as deb installer
        run: "jpackage --name CruisePack-Linux-x64-Installer --type deb -i jars --main-class org.springframework.boot.loader.launch.JarLauncher --main-jar  cruise-pack-${{ needs.build.outputs.version }}-exe.jar"
      - name: Package jar as rpm installer
        run: "jpackage --name CruisePack-Linux-x64-Installer --type rpm -i jars --main-class org.springframework.boot.loader.launch.JarLauncher --main-jar  cruise-pack-${{ needs.build.outputs.version }}-exe.jar"
      - name: View artifacts
        run: ls -l
      - name: Upload installer Deb
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-linux-x64.deb
          path: "cruisepack-linux-x64-installer*.deb"
      - name: Upload installer RPM
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-linux-x64.rpm
          path: "Ccruisepack-linux-x64-installer*.rpm"
  windows-x64:
    needs: build
    runs-on: windows-2019
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Download Resources
        uses: actions/download-artifact@v4
        with:
          name: package-resources
      - name: Download Jar
        uses: actions/download-artifact@v4
        with:
          name: exe-jar
          path: jars
      - run: cp splash.png jars
      - name: Package jar as msi per-user
        run: >
          jpackage
          --dest per-user
          --name "Cruise Pack"
          -i jars
          --main-class org.springframework.boot.loader.launch.JarLauncher
          --main-jar cruise-pack-${{ needs.build.outputs.version }}-exe.jar
          --about-url https://github.com/CI-CMG/JCruisePack
          --win-dir-chooser
          --win-help-url https://github.com/CI-CMG/JCruisePack
          -t msi
          --icon cruise_pack_icon.ico
          --win-menu
          --win-shortcut
          --win-shortcut-prompt
          --java-options '-splash:$APPDIR/splash.png'
          --vendor "CIRES - University of Colorado"
          --win-per-user-install
      - name: Package jar as exe per-user
        run: >
          jpackage
          --dest per-user
          --name "Cruise Pack"
          -i jars
          --main-class org.springframework.boot.loader.launch.JarLauncher
          --main-jar cruise-pack-${{ needs.build.outputs.version }}-exe.jar
          --about-url https://github.com/CI-CMG/JCruisePack
          --win-dir-chooser
          --win-help-url https://github.com/CI-CMG/JCruisePack
          -t exe
          --icon cruise_pack_icon.ico
          --win-menu
          --win-shortcut
          --win-shortcut-prompt
          --java-options '-splash:$APPDIR/splash.png'
          --vendor "CIRES - University of Colorado"
          --win-per-user-install
      - name: Package jar as msi per-machine
        run: >
          jpackage
          --dest per-machine
          --name "Cruise Pack"
          -i jars
          --main-class org.springframework.boot.loader.launch.JarLauncher
          --main-jar cruise-pack-${{ needs.build.outputs.version }}-exe.jar
          --about-url https://github.com/CI-CMG/JCruisePack
          --win-dir-chooser
          --win-help-url https://github.com/CI-CMG/JCruisePack
          -t msi
          --icon cruise_pack_icon.ico
          --win-menu
          --win-shortcut
          --win-shortcut-prompt
          --java-options '-splash:$APPDIR/splash.png'
          --vendor "CIRES - University of Colorado"
      - name: Package jar as exe per-machine
        run: >
          jpackage
          --dest per-machine
          --name "Cruise Pack"
          -i jars
          --main-class org.springframework.boot.loader.launch.JarLauncher
          --main-jar cruise-pack-${{ needs.build.outputs.version }}-exe.jar
          --about-url https://github.com/CI-CMG/JCruisePack
          --win-dir-chooser
          --win-help-url https://github.com/CI-CMG/JCruisePack
          -t exe
          --icon cruise_pack_icon.ico
          --win-menu
          --win-shortcut
          --win-shortcut-prompt
          --java-options '-splash:$APPDIR/splash.png'
          --vendor "CIRES - University of Colorado"
      - name: View artifacts
        run: dir
      - name: Upload installer per-user msi
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-install-win-per-user-x64.msi
          path: "per-user/*.msi"
      - name: Upload installer per-user exe
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-install-win-per-user-x64.exe
          path: "per-user/*.exe"
      - name: Upload installer per-machine msi
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-install-win-per-machine-x64.msi
          path: "per-machine/*.msi"
      - name: Upload installer per-machine exe
        uses: actions/upload-artifact@v4
        with:
          name: cruise-pack-install-win-per-machine-x64.exe
          path: "per-machine/*.exe"
  release:
    needs:
      - build
      - osx-x64
      - osx-arm64
      - linux-x64
      - windows-x64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - run: mkdir release
      - run: cp cruise-pack-install-mac-arm64.dmg/*.dmg release/cruise-pack-install-mac-arm64-${{ needs.build.outputs.version }}.dmg
      - run: cp cruise-pack-install-mac-x64.dmg/*.dmg release/cruise-pack-install-mac-x64-${{ needs.build.outputs.version }}.dmg
      - run: cp cruise-pack-install-win-per-machine-x64.exe/*.exe release/cruise-pack-install-win-per-machine-x64-${{ needs.build.outputs.version }}.exe
      - run: cp cruise-pack-install-win-per-machine-x64.msi/*.msi release/cruise-pack-install-win-per-machine-x64-${{ needs.build.outputs.version }}.msi
      - run: cp cruise-pack-install-win-per-user-x64.exe/*.exe release/cruise-pack-install-win-per-user-x64-${{ needs.build.outputs.version }}.exe
      - run: cp cruise-pack-install-win-per-user-x64.msi/*.msi release/cruise-pack-install-win-per-user-x64-${{ needs.build.outputs.version }}.msi
      - run: cp exe-jar/* release
      - run: ls -l release
      - name: Update branch release
        uses: eine/tip@master
        with:
          tag: ${{ github.ref_name }}-latest
          rm: true
          token: ${{ secrets.RELEASE_PAT }}
          files: release/*

